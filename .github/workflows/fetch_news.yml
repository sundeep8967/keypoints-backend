name: Fetch News

on:
  schedule:
    # Run every 6 hours (at minute 0 of hour 0, 6, 12, and 18)
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      news_type:
        description: 'Type of news to fetch'
        required: true
        default: 'top'
        type: choice
        options:
          - top
          - topic
          - search
          - geo
      topic:
        description: 'Topic for topic headlines'
        required: false
        type: string
      query:
        description: 'Query for search'
        required: false
        type: string
      when:
        description: 'Time period for search (e.g., 1h, 1d)'
        required: false
        type: string
      location:
        description: 'Location for geo news'
        required: false
        type: string
      output_path:
        description: 'Path to save output JSON file'
        required: false
        default: 'data/news.json'
        type: string

jobs:
  fetch-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'  # Use 3.8 for better compatibility
    
    - name: Install dependencies
      run: |
        python -m pip install 
        # Show Python and pip versions for debugging
        python --version
        pip --version
        # Install setuptools version that supports use_2to3
        pip install "setuptools<58"
        pip install "feedparser>=6.0.0"
        # Install dependencies from requirements.txt
        #pip install -r requirements.txt
        # List installed packages for debugging
        pip list
    
    - name: Verify installation
      run: |
        python -c "import pygooglenews; print('PyGoogleNews imported successfully')"
        python -c "from pygooglenews import GoogleNews; print('Successfully imported GoogleNews')"
        python -c "import fastapi; print('FastAPI imported successfully')"
    
    - name: Run installation test script
      run: |
        if [ -f scripts/test_installation.py ]; then
          python scripts/test_installation.py
        fi
    
    - name: Fetch top news (scheduled)
      if: github.event_name == 'schedule'
      run: |
        # Create data directory if it doesn't exist
        mkdir -p data
        python scripts/fetch_news.py --type top --output data/news_top.json
        python scripts/fetch_news.py --type topic --topic technology --output data/news_tech.json
        python scripts/fetch_news.py --type topic --topic business --output data/news_business.json
    
    - name: Fetch news (manual)
      if: github.event_name == 'workflow_dispatch'
      run: |
        ARGS="--type ${{ github.event.inputs.news_type }} --output ${{ github.event.inputs.output_path }}"
        
        if [ "${{ github.event.inputs.news_type }}" = "topic" ] && [ -n "${{ github.event.inputs.topic }}" ]; then
          ARGS="$ARGS --topic ${{ github.event.inputs.topic }}"
        fi
        
        if [ "${{ github.event.inputs.news_type }}" = "search" ] && [ -n "${{ github.event.inputs.query }}" ]; then
          ARGS="$ARGS --query ${{ github.event.inputs.query }}"
          
          if [ -n "${{ github.event.inputs.when }}" ]; then
            ARGS="$ARGS --when ${{ github.event.inputs.when }}"
          fi
        fi
        
        if [ "${{ github.event.inputs.news_type }}" = "geo" ] && [ -n "${{ github.event.inputs.location }}" ]; then
          ARGS="$ARGS --location ${{ github.event.inputs.location }}"
        fi
        
        mkdir -p $(dirname ${{ github.event.inputs.output_path }})
        python scripts/fetch_news.py $ARGS
    
    - name: Commit and push changes
      if: success() # Only run if previous steps succeeded
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update news data - $(date)"
          git push
        fi
