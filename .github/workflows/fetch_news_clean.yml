name: Fetch News - Clean

on:
  push:
    branches: [main, master]
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC
  workflow_dispatch:

env:
  PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers
  PIP_CACHE_DIR: ${{ github.workspace }}/.pip-cache

jobs:
  fetch-news:
    runs-on: ubuntu-latest
    environment: SUPABASE_URL
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.PIP_CACHE_DIR }}
          ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          ~/nltk_data
          ~/.cache/selenium
          ~/.wdm
        key: ${{ runner.os }}-deps-${{ hashFiles('**/requirements.txt') }}-v2
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Setup environment
      run: bash scripts/setup.sh

    - name: Setup browser automation
      run: bash scripts/browser.sh

    - name: Run code quality checks
      run: bash scripts/shellcheck.sh

    - name: Fetch news data
      run: |
        mkdir -p data
        if [ "${{ github.event_name }}" = "schedule" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          # Full news fetch for scheduled runs
          python scripts/fetch_news.py --type top --output data/news_top.json
          python scripts/fetch_news.py --type topic --topic technology --output data/news_tech.json
          python scripts/fetch_news.py --type topic --topic business --output data/news_business.json
          python scripts/fetch_news.py --type topic --topic entertainment --output data/news_entertainment.json
          python scripts/fetch_news.py --type topic --topic sports --output data/news_sports.json
          python scripts/fetch_news.py --type topic --topic science --output data/news_science.json
          python scripts/fetch_news.py --type topic --topic health --output data/news_health.json
          python scripts/fetch_news.py --type topic --topic world --output data/news_world.json
          python scripts/fetch_news.py --type search --query "trending" --when 1d --output data/news_trending.json
        else
          # Quick fetch for push events
          python scripts/fetch_news.py --type top --output data/news_top.json
          python scripts/fetch_news.py --type topic --topic technology --output data/news_tech.json
        fi

    - name: Generate content summaries
      if: github.event_name != 'push' || contains(github.event.head_commit.message, '[full-process]')
      run: |
        echo "Browser engine: ${BROWSER_ENGINE:-unknown}"
        if [ "${BROWSER_ENGINE}" = "playwright" ]; then
          python scripts/generate_inshorts_playwright.py --input-dir data --output-dir data --max-articles 15 --headless
        else
          python scripts/generate_all_inshorts.py --input-dir data --output-dir data --max-articles 15 --headless
        fi

    - name: Upload to Supabase
      if: github.event_name != 'push' || contains(github.event.head_commit.message, '[full-process]')
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        if ls data/inshorts_*.json >/dev/null 2>&1; then
          python scripts/push_inshorts_to_supabase.py
        else
          echo "No processed content to upload"
        fi

    - name: Commit changes
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        if ! git diff --staged --quiet; then
          git commit -m "Update news data - $(date '+%Y-%m-%d %H:%M')"
          git push
        fi